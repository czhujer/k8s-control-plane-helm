server:
  enabled: true

  replicas: 1

  updateStrategy:
    type: RollingUpdate

  image:
    repository: rancher/k3s
    tag: v1.19.4-k3s1
    pullPolicy: Always

  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 10s

  service:
    enabled: true

  serviceNodeport:
    enabled: true
    portApiServer: 30443

  persistentVolume:
    enabled:
      false
    size: 100Mi
    mountPath: /output

  emptyDir:
    sizeLimit: ""

kubestatemetrics:
  standalone:
    enabled: false

  sidecar:
    enabled: true

  replicas: 1

  image:
    repository: quay.io/coreos/kube-state-metrics
    tag: v1.9.7
    pullPolicy: Always

  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  ## Affinity settings for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  ## Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## Assign a PriorityClassName to pods if set
  # priorityClassName: ""

  serviceAccount:
    # Specifies whether a ServiceAccount should be created, require rbac true
    create: false
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # Reference to one or more secrets to be used when pulling images
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    imagePullSecrets: []

  ## ApiServer URL
  # apiserver: ""

  ## kubeconfig
  kubeconfig: /kubeconfig/kubeconfig.yaml

  # Available collectors for kube-state-metrics. By default all available
  # collectors are enabled.
  collectors:
    certificatesigningrequests: true
    configmaps: true
    cronjobs: true
    daemonsets: true
    deployments: true
    endpoints: true
    horizontalpodautoscalers: true
    ingresses: true
    jobs: true
    limitranges: true
    mutatingwebhookconfigurations: false
    namespaces: true
    networkpolicies: false
    nodes: true
    persistentvolumeclaims: true
    persistentvolumes: true
    poddisruptionbudgets: true
    pods: true
    replicasets: true
    replicationcontrollers: true
    resourcequotas: true
    secrets: true
    services: true
    statefulsets: true
    storageclasses: true
    validatingwebhookconfigurations: false
    verticalpodautoscalers: false
    volumeattachements: false

  # Namespace to be enabled for collecting resources. By default all namespaces are collected.
  # namespace: ""

  securityContext:
    enabled: true
    runAsUser: 65534
    fsGroup: 65534

#
# cilium part
#

ipv4:
  # -- Enable IPv4 support.
  enabled: true

ipv6:
  # -- Enable IPv6 support.
  enabled: false

# -- Configure image pull secrets for pulling container images
imagePullSecrets:
# - name: "image-pull-secret"

# kubeConfigPath: ~/.kube/config

azure:
  # -- Enable Azure integration
  enabled: false

# -- Define serviceAccount names for components.
# @default -- Component's fully qualified name.
serviceAccounts:
  operator:
    create: true
    annotations: {}

operator:
  # -- Enable the cilium-operator component (required).
  enabled: true

  # -- cilium-operator image.
  image:
    repository: quay.io/cilium/operator
    tag: latest
    pullPolicy: Always

  # -- Number of replicas to run for the cilium-operator deployment
  replicas: 2

  # -- cilium-operator priorityClassName
  priorityClassName: ""

  # -- cilium-operator update strategy
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  # -- cilium-operator affinity
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                  - operator
          topologyKey: kubernetes.io/hostname


  # -- Additional cilium-etcd-operator container arguments
  #
  extraArgs: {}

  extraEnv: {}

  # -- Additional InitContainers to initialize the pod
  #
  extraInitContainers: []

  # -- Additional cilium-operator hostPath mounts
  extraHostPathMounts: []
    # - name: host-mnt-data
    #   mountPath: /host/mnt/data
    #   hostPath: /mnt/data
    #   hostPathType: Directory
    #   readOnly: true
  #   mountPropagation: HostToContainer

  extraConfigmapMounts: []
    # - name: certs-configmap
    #   mountPath: /certs
    #   configMap: certs-configmap
  #   readOnly: true

  # -- Node tolerations for cilium-operator scheduling to nodes with taints
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  #
  tolerations:
    - operator: Exists
      # - key: "key"
      #   operator: "Equal|Exists"
      #   value: "value"
      #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  # -- Node labels for cilium-operator pod assignment
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}

  # -- Annotations to be added to cilium-operator pods
  #
  podAnnotations: {}

  # -- Labels to be added to cilium-operator pods
  #
  podLabels: {}

  # -- PodDisruptionBudget settings
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  #
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1

  # -- cilium-operator resource limits & requests
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  #
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1Gi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  # -- Security context to be added to cilium-operator pods
  #
  securityContext: {}
  # runAsUser: 0

  endpointGCInterval: "5m0s"
  identityGCInterval: "15m0s"
  identityHeartbeatTimeout: "30m0s"

  # -- Enable prometheus metrics for cilium-operator on the configured port at
  # /metrics
  prometheus:
    enabled: true
    port: 6942
    serviceMonitor:
      # -- Enable service monitors.
      # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
      ##
      enabled: true

