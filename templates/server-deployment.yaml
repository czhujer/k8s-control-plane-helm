{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: k3s-server
  name: k3s-server
spec:
  replicas: {{ .Values.server.replicas }}
  {{- with .Values.server.updateStrategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      k8s-app: k3s-server
  template:
    metadata:
      labels:
        k8s-app: k3s-server
    spec:
      containers:
        - args:
            - server
            - --flannel-backend=none
            - --disable-cloud-controller
            - --disable=traefik
            - --disable=metrics-server
            - --disable-agent
            - --tls-san={{ .Values.server.k3sTLSSan }}
            {{ if .Values.server.oidc.enabled }}
            - --kube-apiserver-arg=oidc-issuer-url={{ .Values.server.oidc.issuer_url }}
            - --kube-apiserver-arg=oidc-client-id={{ .Values.server.oidc.client_id }}
            - --kube-apiserver-arg=oidc-username-claim={{ .Values.server.oidc.username_claim }}
            - --kube-apiserver-arg=oidc-groups-claim={{ .Values.server.oidc.groups_claim }}
            {{ end }}
          env:
            - name: K3S_KUBECONFIG_MODE
              value: "666"
            - name: K3S_KUBECONFIG_OUTPUT
              value: /output/kubeconfig.yaml
            - name: K3S_TOKEN
              value: "{{ .Values.server.k3s_token }}"
          image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          name: k3s-server
          ports:
            - containerPort: 6443
          resources: {}
          volumeMounts:
            - name: k3s-server-datadir
              mountPath: {{ .Values.server.persistentVolumeData.mountPath }}
            - name: server-output
              mountPath: {{ .Values.server.persistentVolume.mountPath }}
            - name: server-tmpfs0
              mountPath: /run
            - name: server-tmpfs1
              mountPath: /var/run
{{- if .Values.kubestatemetrics.sidecar.enabled }}
        - name: kube-state-metrics
          args:
            {{ if .Values.kubestatemetrics.apiserver }}
            - --apiserver={{ .Values.kubestatemetrics.apiserver }}
            {{ end }}
            {{ if .Values.kubestatemetrics.kubeconfig }}
            - --kubeconfig={{ .Values.kubestatemetrics.kubeconfig }}
            {{ end }}
            {{ if .Values.kubestatemetrics.collectors.certificatesigningrequests }}
            - --collectors=certificatesigningrequests
            {{ end  }}
            {{ if .Values.kubestatemetrics.collectors.configmaps }}
            - --collectors=configmaps
            {{ end  }}
            {{ if .Values.kubestatemetrics.collectors.cronjobs  }}
            - --collectors=cronjobs
            {{  end  }}
            {{ if .Values.kubestatemetrics.collectors.daemonsets  }}
            - --collectors=daemonsets
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.deployments  }}
            - --collectors=deployments
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.endpoints  }}
            - --collectors=endpoints
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.horizontalpodautoscalers  }}
            - --collectors=horizontalpodautoscalers
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.ingresses  }}
            - --collectors=ingresses
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.jobs  }}
            - --collectors=jobs
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.limitranges  }}
            - --collectors=limitranges
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.mutatingwebhookconfigurations  }}
            - --collectors=mutatingwebhookconfigurations
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.namespaces  }}
            - --collectors=namespaces
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.networkpolicies  }}
            - --collectors=networkpolicies
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.nodes  }}
            - --collectors=nodes
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.persistentvolumeclaims  }}
            - --collectors=persistentvolumeclaims
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.persistentvolumes  }}
            - --collectors=persistentvolumes
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.poddisruptionbudgets  }}
            - --collectors=poddisruptionbudgets
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.pods  }}
            - --collectors=pods
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.replicasets  }}
            - --collectors=replicasets
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.replicationcontrollers  }}
            - --collectors=replicationcontrollers
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.resourcequotas  }}
            - --collectors=resourcequotas
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.secrets  }}
            - --collectors=secrets
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.services  }}
            - --collectors=services
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.statefulsets  }}
            - --collectors=statefulsets
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.storageclasses  }}
            - --collectors=storageclasses
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.validatingwebhookconfigurations  }}
            - --collectors=validatingwebhookconfigurations
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.verticalpodautoscalers  }}
            - --collectors=verticalpodautoscalers
            {{  end  }}
            {{  if .Values.kubestatemetrics.collectors.volumeattachements  }}
            - --collectors=volumeattachements
            {{  end  }}
            {{ if .Values.kubestatemetrics.namespace }}
            - --namespace={{ .Values.kubestatemetrics.namespace }}
          {{ end }}
          volumeMounts:
            - name: server-output
              mountPath: /kubeconfig
          imagePullPolicy: {{ .Values.kubestatemetrics.image.pullPolicy }}
          image: "{{ .Values.kubestatemetrics.image.repository }}:{{ .Values.kubestatemetrics.image.tag }}"
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
{{- if .Values.kubestatemetrics.resources }}
          resources:
{{ toYaml .Values.kubestatemetrics.resources | indent 10 }}
{{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
        - name: k3s-server-datadir
        {{- if .Values.server.persistentVolumeData.enabled }}
          persistentVolumeClaim:
            claimName: server-data-pvc
        {{- else }}
          emptyDir:
          {{- if .Values.server.emptyDirData.sizeLimit }}
            sizeLimit: {{ .Values.server.emptyDirData.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
        {{- end }}
        - name: server-tmpfs0
          emptyDir:
            medium: Memory
        - name: server-tmpfs1
          emptyDir:
            medium: Memory
        - name: server-output
        {{- if .Values.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: server-output-pvc
        {{- else }}
          emptyDir:
          {{- if .Values.server.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.server.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}
{{- end }}
